@startuml

package startup
{
    class Index{

    }
}

package view {
    class MoveUpButton
    class MoveDownButton
    class MoveLeftButton
    class MoveRightButton

    class MovementButtons
    {
        MoveUpButton
        MoveDownButton
        MoveLeftButton
        MoveRightButton
    }

    class DotCanvas
}

package controller {
    class Controller{
        -backendCommunicator : BackendCommunicator
        -dotPosition : DotPosition
        -dotPositionChangedNotifiers: Array<Function>
        -notifyDotPositionObservers()
        +pollForCurrentDotPosition(milliseconds : int) void
        +moveDotUp() : void
        +moveDotDown() : void
        +moveDotLeft() : void
        +moveDotRight(): void
    }
}

package network {
    class BackendCommunicator{
        -ip : String
        -port : int
        +sendGetDotPositionRequest()
        +sendMoveDotRequest()
    }
}

package model {

enum MoveDotDirections {
    MOVE_UP
    MOVE_DOWN
    MOVE_LEFT
    MOVE_RIGHT
}
class DotPosition
    {
        -x : int
        -y : int
        +getX() : int
        +getY() : int
        +setX() : void
        +setY() : void
    }
}

Index --> view
Index --> controller
Index --> model
Index --> network

MovementButtons --> MoveDownButton
MovementButtons --> MoveUpButton
MovementButtons --> MoveLeftButton
MovementButtons --> MoveRightButton

view --> Controller

Controller --> DotPosition
Controller --> BackendCommunicator
Controller -> MoveDotDirections

@enduml